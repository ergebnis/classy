<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.18.0@b113f3ed0259fd6e212d87c3df80eec95a6abf19">
  <file src="src/Constructs.php">
    <MixedArgumentTypeCoercion>
      <code>$constructsWithMultipleDefinitions</code>
      <code><![CDATA[\usort($constructs, static function (Construct $a, Construct $b): int {
            return \strcmp(
                $a->name(),
                $b->name(),
            );
        })]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$construct</code>
      <code>$constructs[$name]</code>
      <code>$fileInfo</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>definedIn</code>
    </MixedMethodCall>
    <MixedReturnTypeCoercion>
      <code>\array_values($constructs)</code>
      <code><![CDATA[array<int, Construct>]]></code>
    </MixedReturnTypeCoercion>
    <RedundantFunctionCall>
      <code>\array_values</code>
    </RedundantFunctionCall>
  </file>
  <file src="test/Unit/ConstructTest.php">
    <DeprecatedMethod>
      <code>__toString</code>
    </DeprecatedMethod>
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
    <TooManyArguments>
      <code><![CDATA[static function () use ($faker): string {
            return \sprintf(
                '%s.%s',
                $faker->word(),
                $faker->fileExtension(),
            );
        }]]></code>
    </TooManyArguments>
  </file>
  <file src="test/Unit/ConstructsTest.php">
    <PossiblyUnusedMethod>
      <code>provideScenarioWithClassyConstructsBeforePhp81</code>
      <code>provideScenarioWithClassyConstructsOnPhp81</code>
      <code>provideScenarioWithoutClassyConstructs</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Util/PhpVersion.php">
    <PossiblyUnusedMethod>
      <code>toInt</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Util/Scenario.php">
    <RedundantFunctionCall>
      <code>\array_values</code>
    </RedundantFunctionCall>
  </file>
</files>
